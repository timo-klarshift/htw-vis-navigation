package vis.db;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * implement caching
 * 
 * @author timo
 * 
 */
public class VisualFeatures {
	Connection con;
	PreparedStatement stmt = null;

	public VisualFeatures() {
		init();
	}

	private void init() {
		// do database connection
		con = ConnectionFactory.getByName("features");

		// select statement
		try {
			stmt = con
					.prepareStatement("select feature_vectors from image where fotolia_id=? limit 1");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public byte[] getFeature(Integer fotoliaId) {
		byte[] features = null;
		try {
			// set params
			stmt.setInt(1, fotoliaId);

			// query and read
			ResultSet rs = stmt.executeQuery();
			if (rs.next()) {
				features = rs.getBytes(1);
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return features;
	}

	public void shutdown() {
		try {
			con.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private class Cached {
		public int id;
		public byte[] features = null;
		public Cached(id, byte[] features){
			this.id = id;
			this.features = features;
		}
	}

}
