package vis.importer;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import org.apache.log4j.Logger;

import vis.db.ConnectionFactory;
import vis.db.SqlHelper;

/**
 * reads from database
 * and writes an index with lucene
 * 
 * @author timo
 *
 */
public class DbIndexer {
	private Connection con;
	private int layerId;
	private String indexPath;
	private Logger log = Logger.getLogger(this.getClass());
	private SqlHelper sql;
	
	public DbIndexer(int layerId, String indexPath){
		this.layerId = layerId;
		this.indexPath = indexPath;
		
		init();
	}
	
	private void init(){
		// create connection
		con = ConnectionFactory.getByName("images");		
		sql = new SqlHelper(con);
		
		// create index
		
	}
	
	public void shutdown(){
		try {
			con.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void index(){
		int max = getMaxId();
		int min = getMinId();
		System.out.println(min + " / " + max);
	}
	
	private int _numberSelect(String type){
		Statement s;
		try {
			s = con.createStatement();
			ResultSet rs = s.executeQuery("select " + type + " from images_" + layerId);
			if(rs.next()){
				return rs.getInt(1);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return -1;
	}
	
	private int getMaxId(){
		return _numberSelect("MAX(id)");
	}
	
	private int getMinId(){
		return _numberSelect("MIN(id)");
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		DbIndexer indexer = new DbIndexer(0, "../index/test-index");
		indexer.index();
		indexer.shutdown();

	}

}
