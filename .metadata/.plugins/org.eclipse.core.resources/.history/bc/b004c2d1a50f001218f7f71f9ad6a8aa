package vis.db;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import vis.config.VisConfig;
import vis.logging.VisLog;

public class FeatureDump {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// init
		VisConfig.load();
		VisLog.initLogging();
		
		Connection con = ConnectionFactory.getByName("features");
		
		File fFile = new File("features.txt");
		FileWriter writer = null;
		try {
			writer = new FileWriter(fFile);
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		
		// fetch loop
		
		try {
			int bulk = 10000;
			int max = 17000000;
			double p = 0;
			for(int i=0; i<max; i+=bulk){
				Statement stmt = con.createStatement();
				ResultSet rs = stmt.executeQuery("select fotolia_id, feature_vectors from image limit " + i + "," + bulk);
				
				while(rs.next()){
					int fId = rs.getInt(1);
					byte[] features = rs.getBytes(2);	
					writer.write("" + fId + ",");
					for(int g=0; g<features.length; g++){
						writer.write(features[g]);
					}
					
					writer.write("\r\n");
				}
				
				p = (double)i / max;				
				System.out.println((Math.round(100*p) ) + " %");
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		try {
			writer.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
