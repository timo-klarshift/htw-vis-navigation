package vis.db

import groovy.sql.Sql

import java.sql.Connection
import java.sql.PreparedStatement
import java.sql.ResultSet

import vis.config.VisConfig;


/**
 * implement caching
 * @author timo
 *
 */
class VisualFeatures {
	Connection con;
	PreparedStatement stmt;
	
	public VisualFeatures(){
		init()
	}
	
	private void init(){
		// do database connection
		con = ConnectionFactory.getByName("features")
		
		// select statement
		stmt = con.prepareStatement("select feature_vectors from image where fotolia_id=? limit 1");
	}	
	
	public byte[] getFeature(Integer fotoliaId){
		// get from cache
		def cached = featureCache[fotoliaId]
		if(cached)return cached
		
		byte[] features;		
		
		// set params
		stmt.setInt(1, fotoliaId);
		
		// query and read
		ResultSet rs = stmt.executeQuery();			
		if(rs.next()){			
			features = rs.getBytes(1);
			featureCache[fotoliaId] = features
		}			
			
		return features;
	}
	
	public void shutdown(){
		con.close();
	}

	static main(args) {
		VisConfig.load()
		def f = new VisualFeatures()
		10000.times{
			println f.getFeature(20)
		}
		f.shutdown()
	}

}
