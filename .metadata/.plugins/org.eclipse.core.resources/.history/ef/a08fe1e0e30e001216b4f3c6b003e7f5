package vis.clustering.quad;

import java.io.File;

import logging.VisLog;

import org.apache.log4j.Logger;

import vis.config.VisConfig;
import vis.lucene.IndexFactory;
import vis.lucene.SearchCallback;
import vis.lucene.SearchResult;
import vis.lucene.Searcher;
import vis.lucene.TemporaryIndex;

public class LayerCreator {
	private Logger log = Logger.getLogger(this.getClass());
	private Searcher source;	
	
	private int sourceId, destinationId;
	
	public LayerCreator(int sId, int dId){
		this.sourceId = sId;
		this.destinationId = dId;
				
		// create searcher
		source = new Searcher(new File(IndexFactory.getImageIndexPath(sourceId)));
	}
	
	public void  create(){
		run(source);
	}
	
	private void run(Searcher source){
		int sourceCount = source.numDocs();
		if(sourceCount <= 0){
			log.info("FIN");
			return;
		}
				
		log.info("Having " + sourceCount);
		
		// create loop
		QuadLoop loop = new QuadLoop(source, destinationId);
		loop.create();
		loop.close();
		
		// rerun
		Searcher nextSearcher = new Searcher(loop.getTempIndex().getIndexPath());
		run(nextSearcher);
		
		// clean up (delete file)
		loop.getTempIndex().delete();
		
		// assume all quads are written 
		// to the layer above
		// TODO: re-index that layer
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// init
		VisConfig.load();
		VisLog.initLogging();
		
		// 1st layer create
		LayerCreator lc = new LayerCreator(0, 1);
		lc.create();
		
		// 2nd layer create
		LayerCreator lc2 = new LayerCreator(1, 2);
		lc2.create();
	}

}
